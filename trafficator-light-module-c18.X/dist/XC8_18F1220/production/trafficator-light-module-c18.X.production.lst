

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jul 28 23:23:58 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F1320
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F1320 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     _ADRESL	set	4035
    63   000000                     _ADRESH	set	4036
    64   000000                     _ADCON0	set	4034
    65   000000                     _GO_nDONE	set	32273
    66   000000                     _ADCON2	set	4032
    67   000000                     _ADCON1	set	4033
    68   000000                     _PORTBbits	set	3969
    69   000000                     _PORTAbits	set	3968
    70                           
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74   0005A2                     __pcinit:
    75                           	callstack 0
    76   0005A2                     start_initialization:
    77                           	callstack 0
    78   0005A2                     __initialization:
    79                           	callstack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (10 bytes)
    82   0005A2  EE00  F025         	lfsr	0,__pbssCOMRAM
    83   0005A6  0E0A               	movlw	10
    84   0005A8                     clear_0:
    85   0005A8  6AEE               	clrf	postinc0,c
    86   0005AA  06E8               	decf	wreg,f,c
    87   0005AC  E1FD               	bnz	clear_0
    88   0005AE                     end_of_initialization:
    89                           	callstack 0
    90   0005AE                     __end_of__initialization:
    91                           	callstack 0
    92   0005AE  902F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    93   0005B0  922F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    94   0005B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
    95   0005B4  6EF8               	movwf	tblptru,c
    96   0005B6  0100               	movlb	0
    97   0005B8  EFA7  F000         	goto	_main	;jump to C main() function
    98                           
    99                           	psect	bssCOMRAM
   100   000025                     __pbssCOMRAM:
   101                           	callstack 0
   102   000025                     _V_out_value:
   103                           	callstack 0
   104   000025                     	ds	2
   105   000027                     _V_in_value:
   106                           	callstack 0
   107   000027                     	ds	2
   108   000029                     _L_ch_in_value:
   109                           	callstack 0
   110   000029                     	ds	2
   111   00002B                     _R_ch_in_value:
   112                           	callstack 0
   113   00002B                     	ds	2
   114   00002D                     _wasTurningLeft:
   115                           	callstack 0
   116   00002D                     	ds	1
   117   00002E                     _wasTurningRight:
   118                           	callstack 0
   119   00002E                     	ds	1
   120                           
   121                           	psect	cstackCOMRAM
   122   000001                     __pcstackCOMRAM:
   123                           	callstack 0
   124   000001                     ??_low_isr:
   125   000001                     
   126                           ; 1 bytes @ 0x0
   127   000001                     	ds	1
   128   000002                     ??_ReversOn:
   129   000002                     ??_AddRightBlinks:
   130   000002                     ??_AddLeftBlinks:
   131   000002                     ?___awdiv:
   132                           	callstack 0
   133   000002                     InitADC@Channel:
   134                           	callstack 0
   135   000002                     ___awdiv@dividend:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0x1
   139   000002                     	ds	2
   140   000004                     ___awdiv@divisor:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x3
   144   000004                     	ds	2
   145   000006                     ___awdiv@counter:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0x5
   149   000006                     	ds	1
   150   000007                     ___awdiv@sign:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x6
   154   000007                     	ds	1
   155   000008                     ___awdiv@quotient:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0x7
   159   000008                     	ds	2
   160   00000A                     ?_GetADCValue:
   161                           	callstack 0
   162                           
   163                           ; 2 bytes @ 0x9
   164   00000A                     	ds	2
   165   00000C                     ??_GetADCValue:
   166                           
   167                           ; 1 bytes @ 0xB
   168   00000C                     	ds	2
   169   00000E                     GetADCValue@Channel:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0xD
   173   00000E                     	ds	1
   174   00000F                     GetADCValue@temp_1:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0xE
   178   00000F                     	ds	2
   179   000011                     GetADCValue@temp_2:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0x10
   183   000011                     	ds	2
   184   000013                     ?_GetCurrentValue:
   185                           	callstack 0
   186                           
   187                           ; 2 bytes @ 0x12
   188   000013                     	ds	2
   189   000015                     GetCurrentValue@V_in_value:
   190                           	callstack 0
   191                           
   192                           ; 2 bytes @ 0x14
   193   000015                     	ds	2
   194   000017                     GetCurrentValue@V_out_value:
   195                           	callstack 0
   196                           
   197                           ; 2 bytes @ 0x16
   198   000017                     	ds	2
   199   000019                     ??_Turn_49A:
   200                           
   201                           ; 1 bytes @ 0x18
   202   000019                     	ds	2
   203   00001B                     Turn_49A@Current_value:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x1A
   207   00001B                     	ds	2
   208   00001D                     main@R_ch_in_value:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x1C
   212   00001D                     	ds	2
   213   00001F                     main@L_ch_in_value:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0x1E
   217   00001F                     	ds	2
   218   000021                     main@_49A_in_value:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x20
   222   000021                     	ds	2
   223   000023                     main@Reverse_in_value:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x22
   227   000023                     	ds	2
   228                           
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 83 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  Reverse_in_v    2   34[COMRAM] int 
   239 ;;  _49A_in_valu    2   32[COMRAM] int 
   240 ;;  L_ch_in_valu    2   30[COMRAM] int 
   241 ;;  R_ch_in_valu    2   28[COMRAM] int 
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0
   251 ;;      Params:         0       0
   252 ;;      Locals:         8       0
   253 ;;      Temps:          0       0
   254 ;;      Totals:         8       0
   255 ;;Total ram usage:        8 bytes
   256 ;; Hardware stack levels required when called: 6
   257 ;; This function calls:
   258 ;;		_AddLeftBlinks
   259 ;;		_AddRightBlinks
   260 ;;		_GetADCValue
   261 ;;		_InitADC
   262 ;;		_ReversOn
   263 ;;		_Turn_49A
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text0
   270   00014E                     __ptext0:
   271                           	callstack 0
   272   00014E                     _main:
   273                           	callstack 25
   274   00014E  0E00               	movlw	0
   275   000150  6E24               	movwf	(main@Reverse_in_value+1)^0,c
   276   000152  0E00               	movlw	0
   277   000154  6E23               	movwf	main@Reverse_in_value^0,c
   278   000156  0E00               	movlw	0
   279   000158  6E1E               	movwf	(main@R_ch_in_value+1)^0,c
   280   00015A  0E00               	movlw	0
   281   00015C  6E1D               	movwf	main@R_ch_in_value^0,c
   282   00015E  0E00               	movlw	0
   283   000160  6E20               	movwf	(main@L_ch_in_value+1)^0,c
   284   000162  0E00               	movlw	0
   285   000164  6E1F               	movwf	main@L_ch_in_value^0,c
   286   000166                     l1210:
   287   000166  9880               	bcf	128,4,c	;volatile
   288   000168  9881               	bcf	129,4,c	;volatile
   289   00016A  9C80               	bcf	128,6,c	;volatile
   290   00016C  0E38               	movlw	56
   291   00016E  ECDE  F002         	call	_InitADC
   292   000172  0E28               	movlw	40
   293   000174  EC15  F000         	call	_GetADCValue
   294   000178  C00A  F021         	movff	?_GetADCValue,main@_49A_in_value
   295   00017C  C00B  F022         	movff	?_GetADCValue+1,main@_49A_in_value+1
   296   000180  0E30               	movlw	48
   297   000182  EC15  F000         	call	_GetADCValue
   298   000186  C00A  F023         	movff	?_GetADCValue,main@Reverse_in_value
   299   00018A  C00B  F024         	movff	?_GetADCValue+1,main@Reverse_in_value+1
   300   00018E  BE24               	btfsc	(main@Reverse_in_value+1)^0,7,c
   301   000190  EFD3  F000         	goto	u311
   302   000194  5024               	movf	(main@Reverse_in_value+1)^0,w,c
   303   000196  E109               	bnz	u310
   304   000198  0E9C               	movlw	156
   305   00019A  5C23               	subwf	main@Reverse_in_value^0,w,c
   306   00019C  A0D8               	btfss	status,0,c
   307   00019E  EFD3  F000         	goto	u311
   308   0001A2  EFD5  F000         	goto	u310
   309   0001A6                     u311:
   310   0001A6  EFD9  F000         	goto	l1230
   311   0001AA                     u310:
   312   0001AA  ECBD  F002         	call	_ReversOn	;wreg free
   313   0001AE  EF09  F001         	goto	l37
   314   0001B2                     l1230:
   315   0001B2  BE22               	btfsc	(main@_49A_in_value+1)^0,7,c
   316   0001B4  EFE7  F000         	goto	u320
   317   0001B8  5022               	movf	(main@_49A_in_value+1)^0,w,c
   318   0001BA  E107               	bnz	u321
   319   0001BC  0E0A               	movlw	10
   320   0001BE  5C21               	subwf	main@_49A_in_value^0,w,c
   321   0001C0  B0D8               	btfsc	status,0,c
   322   0001C2  EFE5  F000         	goto	u321
   323   0001C6  EFE7  F000         	goto	u320
   324   0001CA                     u321:
   325   0001CA  EFEB  F000         	goto	l1234
   326   0001CE                     u320:
   327   0001CE  ECC1  F001         	call	_Turn_49A	;wreg free
   328   0001D2  EFB3  F000         	goto	l1210
   329   0001D6                     l1234:
   330   0001D6  042E               	decf	_wasTurningRight^0,w,c
   331   0001D8  A4D8               	btfss	status,2,c
   332   0001DA  EFF1  F000         	goto	u331
   333   0001DE  EFF3  F000         	goto	u330
   334   0001E2                     u331:
   335   0001E2  EFF7  F000         	goto	l1238
   336   0001E6                     u330:
   337   0001E6  EC11  F002         	call	_AddRightBlinks	;wreg free
   338   0001EA  EFB3  F000         	goto	l1210
   339   0001EE                     l1238:
   340   0001EE  042D               	decf	_wasTurningLeft^0,w,c
   341   0001F0  A4D8               	btfss	status,2,c
   342   0001F2  EFFD  F000         	goto	u341
   343   0001F6  EFFF  F000         	goto	u340
   344   0001FA                     u341:
   345   0001FA  EF03  F001         	goto	l1242
   346   0001FE                     u340:
   347   0001FE  EC5B  F002         	call	_AddLeftBlinks	;wreg free
   348   000202  EFB3  F000         	goto	l1210
   349   000206                     l1242:
   350   000206  0E00               	movlw	0
   351   000208  6E2D               	movwf	_wasTurningLeft^0,c
   352   00020A  0E00               	movlw	0
   353   00020C  6E2E               	movwf	_wasTurningRight^0,c
   354   00020E  EFB3  F000         	goto	l1210
   355   000212                     l37:
   356   000212  EF13  F000         	goto	start
   357   000216                     __end_of_main:
   358                           	callstack 0
   359                           
   360 ;; *************** function _Turn_49A *****************
   361 ;; Defined at:
   362 ;;		line 192 in file "user.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;  Current_valu    2   26[COMRAM] int 
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      _Bool 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0
   376 ;;      Params:         0       0
   377 ;;      Locals:         2       0
   378 ;;      Temps:          2       0
   379 ;;      Totals:         4       0
   380 ;;Total ram usage:        4 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; Hardware stack levels required when called: 5
   383 ;; This function calls:
   384 ;;		_GetCurrentValue
   385 ;;		_GetDirection
   386 ;; This function is called by:
   387 ;;		_main
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text1
   392   000382                     __ptext1:
   393                           	callstack 0
   394   000382                     _Turn_49A:
   395                           	callstack 25
   396   000382                     
   397                           ;user.c: 195:         PORTAbits.RA6 = 1;
   398   000382  8C80               	bsf	128,6,c	;volatile
   399   000384                     
   400                           ;user.c: 196:         _delay((unsigned long)((100)*(4000000/4000.0)));
   401   000384  0E82               	movlw	130
   402   000386  6E19               	movwf	??_Turn_49A^0,c
   403   000388  0EDE               	movlw	222
   404   00038A                     u357:
   405   00038A  2EE8               	decfsz	wreg,f,c
   406   00038C  D7FE               	bra	u357
   407   00038E  2E19               	decfsz	??_Turn_49A^0,f,c
   408   000390  D7FC               	bra	u357
   409   000392                     
   410                           ;user.c: 198:         int Current_value = GetCurrentValue();
   411   000392  ECA5  F002         	call	_GetCurrentValue	;wreg free
   412   000396  C013  F01B         	movff	?_GetCurrentValue,Turn_49A@Current_value
   413   00039A  C014  F01C         	movff	?_GetCurrentValue+1,Turn_49A@Current_value+1
   414   00039E                     
   415                           ;user.c: 200:         if (Current_value < 5)
   416   00039E  BE1C               	btfsc	(Turn_49A@Current_value+1)^0,7,c
   417   0003A0  EFDD  F001         	goto	u300
   418   0003A4  501C               	movf	(Turn_49A@Current_value+1)^0,w,c
   419   0003A6  E107               	bnz	u301
   420   0003A8  0E05               	movlw	5
   421   0003AA  5C1B               	subwf	Turn_49A@Current_value^0,w,c
   422   0003AC  B0D8               	btfsc	status,0,c
   423   0003AE  EFDB  F001         	goto	u301
   424   0003B2  EFDD  F001         	goto	u300
   425   0003B6                     u301:
   426   0003B6  EFF7  F001         	goto	l117
   427   0003BA                     u300:
   428   0003BA                     
   429                           ;user.c: 201:                 {;user.c: 202:                 PORTAbits.RA6 = 1;
   430   0003BA  8C80               	bsf	128,6,c	;volatile
   431   0003BC                     
   432                           ;user.c: 204:                 GetDirection();
   433   0003BC  EC6D  F001         	call	_GetDirection	;wreg free
   434   0003C0                     
   435                           ;user.c: 205:                 _delay((unsigned long)((50)*(4000000/4000.0)));
   436   0003C0  0E41               	movlw	65
   437   0003C2  6E19               	movwf	??_Turn_49A^0,c
   438   0003C4  0EEE               	movlw	238
   439   0003C6                     u367:
   440   0003C6  2EE8               	decfsz	wreg,f,c
   441   0003C8  D7FE               	bra	u367
   442   0003CA  2E19               	decfsz	??_Turn_49A^0,f,c
   443   0003CC  D7FC               	bra	u367
   444   0003CE  D000               	nop2	
   445   0003D0                     
   446                           ;user.c: 206:                 PORTAbits.RA6 = 0;
   447   0003D0  9C80               	bcf	128,6,c	;volatile
   448   0003D2                     
   449                           ;user.c: 207:                 _delay((unsigned long)((200)*(4000000/4000.0)));
   450   0003D2  0E02               	movlw	2
   451   0003D4  6E1A               	movwf	(??_Turn_49A+1)^0,c
   452   0003D6  0E04               	movlw	4
   453   0003D8  6E19               	movwf	??_Turn_49A^0,c
   454   0003DA  0EBA               	movlw	186
   455   0003DC                     u377:
   456   0003DC  2EE8               	decfsz	wreg,f,c
   457   0003DE  D7FE               	bra	u377
   458   0003E0  2E19               	decfsz	??_Turn_49A^0,f,c
   459   0003E2  D7FC               	bra	u377
   460   0003E4  2E1A               	decfsz	(??_Turn_49A+1)^0,f,c
   461   0003E6  D7FA               	bra	u377
   462   0003E8  D000               	nop2	
   463   0003EA                     l1190:
   464   0003EA  EF10  F002         	goto	l118
   465   0003EE                     l117:
   466                           
   467                           ;user.c: 213:                 {;user.c: 214:                 PORTAbits.RA6 = 1;
   468   0003EE  8C80               	bsf	128,6,c	;volatile
   469   0003F0                     
   470                           ;user.c: 216:                 GetDirection();
   471   0003F0  EC6D  F001         	call	_GetDirection	;wreg free
   472   0003F4                     
   473                           ;user.c: 217:                 _delay((unsigned long)((100)*(4000000/4000.0)));
   474   0003F4  0E82               	movlw	130
   475   0003F6  6E19               	movwf	??_Turn_49A^0,c
   476   0003F8  0EDE               	movlw	222
   477   0003FA                     u387:
   478   0003FA  2EE8               	decfsz	wreg,f,c
   479   0003FC  D7FE               	bra	u387
   480   0003FE  2E19               	decfsz	??_Turn_49A^0,f,c
   481   000400  D7FC               	bra	u387
   482   000402                     
   483                           ;user.c: 218:                 PORTAbits.RA6 = 0;
   484   000402  9C80               	bcf	128,6,c	;volatile
   485   000404                     
   486                           ;user.c: 219:                 _delay((unsigned long)((400)*(4000000/4000.0)));
   487   000404  0E03               	movlw	3
   488   000406  6E1A               	movwf	(??_Turn_49A+1)^0,c
   489   000408  0E08               	movlw	8
   490   00040A  6E19               	movwf	??_Turn_49A^0,c
   491   00040C  0E77               	movlw	119
   492   00040E                     u397:
   493   00040E  2EE8               	decfsz	wreg,f,c
   494   000410  D7FE               	bra	u397
   495   000412  2E19               	decfsz	??_Turn_49A^0,f,c
   496   000414  D7FC               	bra	u397
   497   000416  2E1A               	decfsz	(??_Turn_49A+1)^0,f,c
   498   000418  D7FA               	bra	u397
   499   00041A  F000               	nop	
   500   00041C  EFF5  F001         	goto	l1190
   501   000420                     l118:
   502   000420  0012               	return		;funcret
   503   000422                     __end_of_Turn_49A:
   504                           	callstack 0
   505                           
   506 ;; *************** function _GetDirection *****************
   507 ;; Defined at:
   508 ;;		line 169 in file "user.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      _Bool 
   515 ;; Registers used:
   516 ;;		wreg, status,2, status,0, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0
   522 ;;      Params:         0       0
   523 ;;      Locals:         0       0
   524 ;;      Temps:          0       0
   525 ;;      Totals:         0       0
   526 ;;Total ram usage:        0 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; Hardware stack levels required when called: 4
   529 ;; This function calls:
   530 ;;		_GetADCValue
   531 ;;		_InitADC
   532 ;; This function is called by:
   533 ;;		_Turn_49A
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text2
   538   0002DA                     __ptext2:
   539                           	callstack 0
   540   0002DA                     _GetDirection:
   541                           	callstack 25
   542   0002DA                     
   543                           ;user.c: 171:     InitADC(0b00000100|0b00011000);
   544   0002DA  0E1C               	movlw	28
   545   0002DC  ECDE  F002         	call	_InitADC
   546                           
   547                           ;user.c: 172:     R_ch_in_value = GetADCValue(0b00000100);
   548   0002E0  0E04               	movlw	4
   549   0002E2  EC15  F000         	call	_GetADCValue
   550   0002E6  C00A  F02B         	movff	?_GetADCValue,_R_ch_in_value
   551   0002EA  C00B  F02C         	movff	?_GetADCValue+1,_R_ch_in_value+1
   552                           
   553                           ;user.c: 173:     L_ch_in_value = GetADCValue(0b00011000);
   554   0002EE  0E18               	movlw	24
   555   0002F0  EC15  F000         	call	_GetADCValue
   556   0002F4  C00A  F029         	movff	?_GetADCValue,_L_ch_in_value
   557   0002F8  C00B  F02A         	movff	?_GetADCValue+1,_L_ch_in_value+1
   558   0002FC                     
   559                           ;user.c: 175:     if (R_ch_in_value > 10 && R_ch_in_value < 10)
   560   0002FC  BE2C               	btfsc	(_R_ch_in_value+1)^0,7,c
   561   0002FE  EF8A  F001         	goto	u261
   562   000302  502C               	movf	(_R_ch_in_value+1)^0,w,c
   563   000304  E109               	bnz	u260
   564   000306  0E0B               	movlw	11
   565   000308  5C2B               	subwf	_R_ch_in_value^0,w,c
   566   00030A  A0D8               	btfss	status,0,c
   567   00030C  EF8A  F001         	goto	u261
   568   000310  EF8C  F001         	goto	u260
   569   000314                     u261:
   570   000314  EF9E  F001         	goto	l1156
   571   000318                     u260:
   572   000318  BE2C               	btfsc	(_R_ch_in_value+1)^0,7,c
   573   00031A  EF9A  F001         	goto	u270
   574   00031E  502C               	movf	(_R_ch_in_value+1)^0,w,c
   575   000320  E107               	bnz	u271
   576   000322  0E0A               	movlw	10
   577   000324  5C2B               	subwf	_R_ch_in_value^0,w,c
   578   000326  B0D8               	btfsc	status,0,c
   579   000328  EF98  F001         	goto	u271
   580   00032C  EF9A  F001         	goto	u270
   581   000330                     u271:
   582   000330  EF9E  F001         	goto	l1156
   583   000334                     u270:
   584   000334                     
   585                           ;user.c: 176:         {return;	Return value of _GetDirection is never used
   586   000334  0E01               	movlw	1
   587   000336  6E2E               	movwf	_wasTurningRight^0,c
   588   000338  EFC0  F001         	goto	l111
   589   00033C                     l1156:
   590   00033C  BE2C               	btfsc	(_R_ch_in_value+1)^0,7,c
   591   00033E  EFAC  F001         	goto	u280
   592   000342  502C               	movf	(_R_ch_in_value+1)^0,w,c
   593   000344  E107               	bnz	u281
   594   000346  0E0A               	movlw	10
   595   000348  5C2B               	subwf	_R_ch_in_value^0,w,c
   596   00034A  B0D8               	btfsc	status,0,c
   597   00034C  EFAA  F001         	goto	u281
   598   000350  EFAC  F001         	goto	u280
   599   000354                     u281:
   600   000354  EFBE  F001         	goto	l1166
   601   000358                     u280:
   602   000358  BE2C               	btfsc	(_R_ch_in_value+1)^0,7,c
   603   00035A  EFB8  F001         	goto	u291
   604   00035E  502C               	movf	(_R_ch_in_value+1)^0,w,c
   605   000360  E109               	bnz	u290
   606   000362  0E0B               	movlw	11
   607   000364  5C2B               	subwf	_R_ch_in_value^0,w,c
   608   000366  A0D8               	btfss	status,0,c
   609   000368  EFB8  F001         	goto	u291
   610   00036C  EFBA  F001         	goto	u290
   611   000370                     u291:
   612   000370  EFBE  F001         	goto	l1166
   613   000374                     u290:
   614   000374                     
   615                           ;user.c: 180:         {return;	Return value of _GetDirection is never used
   616   000374  0E01               	movlw	1
   617   000376  6E2D               	movwf	_wasTurningLeft^0,c
   618   000378  EFC0  F001         	goto	l111
   619   00037C                     l1166:
   620                           
   621                           ;user.c: 184:     {return;	Return value of _GetDirection is never used
   622   00037C  0E00               	movlw	0
   623   00037E  6E2D               	movwf	_wasTurningLeft^0,c
   624   000380                     l111:
   625   000380  0012               	return		;funcret
   626   000382                     __end_of_GetDirection:
   627                           	callstack 0
   628                           
   629 ;; *************** function _GetCurrentValue *****************
   630 ;; Defined at:
   631 ;;		line 159 in file "user.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  V_out_value     2   22[COMRAM] int 
   636 ;;  V_in_value      2   20[COMRAM] int 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  2   18[COMRAM] int 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0
   646 ;;      Params:         2       0
   647 ;;      Locals:         4       0
   648 ;;      Temps:          0       0
   649 ;;      Totals:         6       0
   650 ;;Total ram usage:        6 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 4
   653 ;; This function calls:
   654 ;;		_GetADCValue
   655 ;;		_InitADC
   656 ;; This function is called by:
   657 ;;		_Turn_49A
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text3
   662   00054A                     __ptext3:
   663                           	callstack 0
   664   00054A                     _GetCurrentValue:
   665                           	callstack 25
   666   00054A                     
   667                           ;user.c: 161:     InitADC(0b00000000|0b00000010);
   668   00054A  0E02               	movlw	2
   669   00054C  ECDE  F002         	call	_InitADC
   670                           
   671                           ;user.c: 162:     int V_in_value = GetADCValue(0b00000000);
   672   000550  0E00               	movlw	0
   673   000552  EC15  F000         	call	_GetADCValue
   674   000556  C00A  F015         	movff	?_GetADCValue,GetCurrentValue@V_in_value
   675   00055A  C00B  F016         	movff	?_GetADCValue+1,GetCurrentValue@V_in_value+1
   676                           
   677                           ;user.c: 163:     int V_out_value = GetADCValue(0b00000010);
   678   00055E  0E02               	movlw	2
   679   000560  EC15  F000         	call	_GetADCValue
   680   000564  C00A  F017         	movff	?_GetADCValue,GetCurrentValue@V_out_value
   681   000568  C00B  F018         	movff	?_GetADCValue+1,GetCurrentValue@V_out_value+1
   682   00056C                     
   683                           ;user.c: 164:     return (V_in_value - V_out_value);
   684   00056C  5017               	movf	GetCurrentValue@V_out_value^0,w,c
   685   00056E  5C15               	subwf	GetCurrentValue@V_in_value^0,w,c
   686   000570  6E13               	movwf	?_GetCurrentValue^0,c
   687   000572  5018               	movf	(GetCurrentValue@V_out_value+1)^0,w,c
   688   000574  5816               	subwfb	(GetCurrentValue@V_in_value+1)^0,w,c
   689   000576  6E14               	movwf	(?_GetCurrentValue+1)^0,c
   690   000578  0012               	return		;funcret
   691   00057A                     __end_of_GetCurrentValue:
   692                           	callstack 0
   693                           
   694 ;; *************** function _InitADC *****************
   695 ;; Defined at:
   696 ;;		line 47 in file "user.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  Channel         1    wreg     unsigned char 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  Channel         1    1[COMRAM] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0
   710 ;;      Params:         0       0
   711 ;;      Locals:         1       0
   712 ;;      Temps:          0       0
   713 ;;      Totals:         1       0
   714 ;;Total ram usage:        1 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; Hardware stack levels required when called: 2
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_main
   721 ;;		_GetCurrentValue
   722 ;;		_GetDirection
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text4
   727   0005BC                     __ptext4:
   728                           	callstack 0
   729   0005BC                     _InitADC:
   730                           	callstack 26
   731                           
   732                           ;incstack = 0
   733                           ;InitADC@Channel stored from wreg
   734   0005BC  6E02               	movwf	InitADC@Channel^0,c
   735   0005BE                     
   736                           ;user.c: 47: void InitADC(unsigned char Channel);user.c: 48: {;user.c: 51:     ADCON1 = 
      +                          0b00000000;
   737   0005BE  0E00               	movlw	0
   738   0005C0  6EC1               	movwf	193,c	;volatile
   739                           
   740                           ;user.c: 56:     ADCON0 = 0b00000000;
   741   0005C2  0E00               	movlw	0
   742   0005C4  6EC2               	movwf	194,c	;volatile
   743   0005C6                     
   744                           ;user.c: 58:     ADCON0 |= Channel;
   745   0005C6  5002               	movf	InitADC@Channel^0,w,c	;volatile
   746   0005C8  12C2               	iorwf	194,f,c	;volatile
   747   0005CA                     
   748                           ;user.c: 75:     ADCON2 = 0b00000111;
   749   0005CA  0E07               	movlw	7
   750   0005CC  6EC0               	movwf	192,c	;volatile
   751   0005CE  0012               	return		;funcret
   752   0005D0                     __end_of_InitADC:
   753                           	callstack 0
   754                           
   755 ;; *************** function _GetADCValue *****************
   756 ;; Defined at:
   757 ;;		line 119 in file "user.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  Channel         1    wreg     unsigned char 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  Channel         1   13[COMRAM] unsigned char 
   762 ;;  temp_2          2   16[COMRAM] int 
   763 ;;  temp_1          2   14[COMRAM] int 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  2    9[COMRAM] int 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0
   773 ;;      Params:         2       0
   774 ;;      Locals:         5       0
   775 ;;      Temps:          2       0
   776 ;;      Totals:         9       0
   777 ;;Total ram usage:        9 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; Hardware stack levels required when called: 3
   780 ;; This function calls:
   781 ;;		___awdiv
   782 ;; This function is called by:
   783 ;;		_main
   784 ;;		_GetCurrentValue
   785 ;;		_GetDirection
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text5
   790   00002A                     __ptext5:
   791                           	callstack 0
   792   00002A                     _GetADCValue:
   793                           	callstack 25
   794                           
   795                           ;incstack = 0
   796                           ;GetADCValue@Channel stored from wreg
   797   00002A  6E0E               	movwf	GetADCValue@Channel^0,c
   798   00002C                     
   799                           ;user.c: 122:     int temp_2 =0;
   800   00002C  0E00               	movlw	0
   801   00002E  6E12               	movwf	(GetADCValue@temp_2+1)^0,c
   802   000030  0E00               	movlw	0
   803   000032  6E11               	movwf	GetADCValue@temp_2^0,c
   804   000034                     
   805                           ;user.c: 124:     ADCON0 &= 0b11100011;
   806   000034  0EE3               	movlw	227
   807   000036  16C2               	andwf	194,f,c	;volatile
   808                           
   809                           ;user.c: 125:     switch(Channel)
   810   000038  EF3C  F000         	goto	l1116
   811   00003C                     l1096:
   812   00003C  50C2               	movf	194,w,c	;volatile
   813   00003E  EF65  F000         	goto	l1118
   814   000042                     l1098:
   815   000042  84C2               	bsf	194,2,c	;volatile
   816   000044  EF65  F000         	goto	l1118
   817   000048                     l1100:
   818   000048  86C2               	bsf	194,3,c	;volatile
   819   00004A  EF65  F000         	goto	l1118
   820   00004E                     l1102:
   821   00004E  0E0C               	movlw	12
   822   000050  12C2               	iorwf	194,f,c	;volatile
   823   000052  EF65  F000         	goto	l1118
   824   000056                     l1104:
   825   000056  88C2               	bsf	194,4,c	;volatile
   826   000058  EF65  F000         	goto	l1118
   827   00005C                     l1106:
   828   00005C  0E14               	movlw	20
   829   00005E  12C2               	iorwf	194,f,c	;volatile
   830   000060  EF65  F000         	goto	l1118
   831   000064                     l1108:
   832   000064  0E18               	movlw	24
   833   000066  12C2               	iorwf	194,f,c	;volatile
   834   000068  EF65  F000         	goto	l1118
   835   00006C                     l1110:
   836   00006C  0E00               	movlw	0
   837   00006E  6E0B               	movwf	(?_GetADCValue+1)^0,c
   838   000070  0E00               	movlw	0
   839   000072  6E0A               	movwf	?_GetADCValue^0,c
   840   000074  EFA6  F000         	goto	l98
   841   000078                     l1116:
   842   000078  500E               	movf	GetADCValue@Channel^0,w,c
   843   00007A  6E0C               	movwf	??_GetADCValue^0,c
   844   00007C  6A0D               	clrf	(??_GetADCValue+1)^0,c
   845                           
   846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   847                           ; Switch size 1, requested type "simple"
   848                           ; Number of cases is 1, Range of values is 0 to 0
   849                           ; switch strategies available:
   850                           ; Name         Instructions Cycles
   851                           ; simple_byte            4     3 (average)
   852                           ;	Chosen strategy is simple_byte
   853   00007E  500D               	movf	(??_GetADCValue+1)^0,w,c
   854   000080  0A00               	xorlw	0	; case 0
   855   000082  B4D8               	btfsc	status,2,c
   856   000084  EF46  F000         	goto	l1248
   857   000088  EF36  F000         	goto	l1110
   858   00008C                     l1248:
   859                           
   860                           ; Switch size 1, requested type "simple"
   861                           ; Number of cases is 7, Range of values is 0 to 56
   862                           ; switch strategies available:
   863                           ; Name         Instructions Cycles
   864                           ; simple_byte           22    12 (average)
   865                           ;	Chosen strategy is simple_byte
   866   00008C  500C               	movf	??_GetADCValue^0,w,c
   867   00008E  0A00               	xorlw	0	; case 0
   868   000090  B4D8               	btfsc	status,2,c
   869   000092  EF1E  F000         	goto	l1096
   870   000096  0A02               	xorlw	2	; case 2
   871   000098  B4D8               	btfsc	status,2,c
   872   00009A  EF21  F000         	goto	l1098
   873   00009E  0A06               	xorlw	6	; case 4
   874   0000A0  B4D8               	btfsc	status,2,c
   875   0000A2  EF24  F000         	goto	l1100
   876   0000A6  0A1C               	xorlw	28	; case 24
   877   0000A8  B4D8               	btfsc	status,2,c
   878   0000AA  EF27  F000         	goto	l1102
   879   0000AE  0A30               	xorlw	48	; case 40
   880   0000B0  B4D8               	btfsc	status,2,c
   881   0000B2  EF2B  F000         	goto	l1104
   882   0000B6  0A18               	xorlw	24	; case 48
   883   0000B8  B4D8               	btfsc	status,2,c
   884   0000BA  EF2E  F000         	goto	l1106
   885   0000BE  0A08               	xorlw	8	; case 56
   886   0000C0  B4D8               	btfsc	status,2,c
   887   0000C2  EF32  F000         	goto	l1108
   888   0000C6  EF36  F000         	goto	l1110
   889   0000CA                     l1118:
   890                           
   891                           ;user.c: 137:     _delay((unsigned long)((10)*(4000000/4000.0)));
   892   0000CA  0E0D               	movlw	13
   893   0000CC  6E0C               	movwf	??_GetADCValue^0,c
   894   0000CE  0EFC               	movlw	252
   895   0000D0                     u407:
   896   0000D0  2EE8               	decfsz	wreg,f,c
   897   0000D2  D7FE               	bra	u407
   898   0000D4  2E0C               	decfsz	??_GetADCValue^0,f,c
   899   0000D6  D7FC               	bra	u407
   900   0000D8                     
   901                           ;user.c: 138:  GO_nDONE = 1;
   902   0000D8  82C2               	bsf	4034,1,c	;volatile
   903   0000DA                     l99:
   904                           
   905                           ;user.c: 139:  while(GO_nDONE)
   906   0000DA  B2C2               	btfsc	4034,1,c	;volatile
   907   0000DC  EF72  F000         	goto	u241
   908   0000E0  EF74  F000         	goto	u240
   909   0000E4                     u241:
   910   0000E4  EF6D  F000         	goto	l99
   911   0000E8                     u240:
   912   0000E8                     
   913                           ;user.c: 143:     temp_1 = ((ADRESH<<8)+ADRESL);
   914   0000E8  50C4               	movf	196,w,c	;volatile
   915   0000EA  6E0D               	movwf	(??_GetADCValue+1)^0,c
   916   0000EC  6A0C               	clrf	??_GetADCValue^0,c
   917   0000EE  50C3               	movf	195,w,c	;volatile
   918   0000F0  240C               	addwf	??_GetADCValue^0,w,c
   919   0000F2  6E0F               	movwf	GetADCValue@temp_1^0,c
   920   0000F4  0E00               	movlw	0
   921   0000F6  200D               	addwfc	(??_GetADCValue+1)^0,w,c
   922   0000F8  6E10               	movwf	(GetADCValue@temp_1+1)^0,c
   923   0000FA                     
   924                           ;user.c: 145:     _delay((unsigned long)((20)*(4000000/4000.0)));
   925   0000FA  0E1A               	movlw	26
   926   0000FC  6E0C               	movwf	??_GetADCValue^0,c
   927   0000FE  0EF8               	movlw	248
   928   000100                     u417:
   929   000100  2EE8               	decfsz	wreg,f,c
   930   000102  D7FE               	bra	u417
   931   000104  2E0C               	decfsz	??_GetADCValue^0,f,c
   932   000106  D7FC               	bra	u417
   933   000108  D000               	nop2	
   934   00010A                     
   935                           ;user.c: 146:  GO_nDONE = 1;
   936   00010A  82C2               	bsf	4034,1,c	;volatile
   937   00010C                     l102:
   938                           
   939                           ;user.c: 147:  while(GO_nDONE)
   940   00010C  B2C2               	btfsc	4034,1,c	;volatile
   941   00010E  EF8B  F000         	goto	u251
   942   000112  EF8D  F000         	goto	u250
   943   000116                     u251:
   944   000116  EF86  F000         	goto	l102
   945   00011A                     u250:
   946   00011A                     
   947                           ;user.c: 150:     temp_2 = ((ADRESH<<8)+ADRESL);
   948   00011A  50C4               	movf	196,w,c	;volatile
   949   00011C  6E0D               	movwf	(??_GetADCValue+1)^0,c
   950   00011E  6A0C               	clrf	??_GetADCValue^0,c
   951   000120  50C3               	movf	195,w,c	;volatile
   952   000122  240C               	addwf	??_GetADCValue^0,w,c
   953   000124  6E11               	movwf	GetADCValue@temp_2^0,c
   954   000126  0E00               	movlw	0
   955   000128  200D               	addwfc	(??_GetADCValue+1)^0,w,c
   956   00012A  6E12               	movwf	(GetADCValue@temp_2+1)^0,c
   957   00012C                     
   958                           ;user.c: 152:     return ((temp_1 + temp_2)/2);
   959   00012C  5011               	movf	GetADCValue@temp_2^0,w,c
   960   00012E  240F               	addwf	GetADCValue@temp_1^0,w,c
   961   000130  6E02               	movwf	___awdiv@dividend^0,c
   962   000132  5012               	movf	(GetADCValue@temp_2+1)^0,w,c
   963   000134  2010               	addwfc	(GetADCValue@temp_1+1)^0,w,c
   964   000136  6E03               	movwf	(___awdiv@dividend+1)^0,c
   965   000138  0E00               	movlw	0
   966   00013A  6E05               	movwf	(___awdiv@divisor+1)^0,c
   967   00013C  0E02               	movlw	2
   968   00013E  6E04               	movwf	___awdiv@divisor^0,c
   969   000140  EC0B  F001         	call	___awdiv	;wreg free
   970   000144  C002  F00A         	movff	?___awdiv,?_GetADCValue
   971   000148  C003  F00B         	movff	?___awdiv+1,?_GetADCValue+1
   972   00014C                     l98:
   973   00014C  0012               	return		;funcret
   974   00014E                     __end_of_GetADCValue:
   975                           	callstack 0
   976                           
   977 ;; *************** function ___awdiv *****************
   978 ;; Defined at:
   979 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  dividend        2    1[COMRAM] int 
   982 ;;  divisor         2    3[COMRAM] int 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  quotient        2    7[COMRAM] int 
   985 ;;  sign            1    6[COMRAM] unsigned char 
   986 ;;  counter         1    5[COMRAM] unsigned char 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  2    1[COMRAM] int 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0
   996 ;;      Params:         4       0
   997 ;;      Locals:         4       0
   998 ;;      Temps:          0       0
   999 ;;      Totals:         8       0
  1000 ;;Total ram usage:        8 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; Hardware stack levels required when called: 2
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_GetADCValue
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text6
  1011   000216                     __ptext6:
  1012                           	callstack 0
  1013   000216                     ___awdiv:
  1014                           	callstack 25
  1015   000216  0E00               	movlw	0
  1016   000218  6E07               	movwf	___awdiv@sign^0,c
  1017   00021A  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  1018   00021C  EF14  F001         	goto	u180
  1019   000220  EF12  F001         	goto	u181
  1020   000224                     u181:
  1021   000224  EF1A  F001         	goto	l1056
  1022   000228                     u180:
  1023   000228  6C04               	negf	___awdiv@divisor^0,c
  1024   00022A  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  1025   00022C  B0D8               	btfsc	status,0,c
  1026   00022E  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  1027   000230  0E01               	movlw	1
  1028   000232  6E07               	movwf	___awdiv@sign^0,c
  1029   000234                     l1056:
  1030   000234  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  1031   000236  EF21  F001         	goto	u190
  1032   00023A  EF1F  F001         	goto	u191
  1033   00023E                     u191:
  1034   00023E  EF27  F001         	goto	l1062
  1035   000242                     u190:
  1036   000242  6C02               	negf	___awdiv@dividend^0,c
  1037   000244  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  1038   000246  B0D8               	btfsc	status,0,c
  1039   000248  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  1040   00024A  0E01               	movlw	1
  1041   00024C  1A07               	xorwf	___awdiv@sign^0,f,c
  1042   00024E                     l1062:
  1043   00024E  0E00               	movlw	0
  1044   000250  6E09               	movwf	(___awdiv@quotient+1)^0,c
  1045   000252  0E00               	movlw	0
  1046   000254  6E08               	movwf	___awdiv@quotient^0,c
  1047   000256  5004               	movf	___awdiv@divisor^0,w,c
  1048   000258  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  1049   00025A  B4D8               	btfsc	status,2,c
  1050   00025C  EF32  F001         	goto	u201
  1051   000260  EF34  F001         	goto	u200
  1052   000264                     u201:
  1053   000264  EF5C  F001         	goto	l1084
  1054   000268                     u200:
  1055   000268  0E01               	movlw	1
  1056   00026A  6E06               	movwf	___awdiv@counter^0,c
  1057   00026C  EF3C  F001         	goto	l1070
  1058   000270                     l1068:
  1059   000270  90D8               	bcf	status,0,c
  1060   000272  3604               	rlcf	___awdiv@divisor^0,f,c
  1061   000274  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  1062   000276  2A06               	incf	___awdiv@counter^0,f,c
  1063   000278                     l1070:
  1064   000278  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  1065   00027A  EF41  F001         	goto	u211
  1066   00027E  EF43  F001         	goto	u210
  1067   000282                     u211:
  1068   000282  EF38  F001         	goto	l1068
  1069   000286                     u210:
  1070   000286                     l1072:
  1071   000286  90D8               	bcf	status,0,c
  1072   000288  3608               	rlcf	___awdiv@quotient^0,f,c
  1073   00028A  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  1074   00028C  5004               	movf	___awdiv@divisor^0,w,c
  1075   00028E  5C02               	subwf	___awdiv@dividend^0,w,c
  1076   000290  5005               	movf	(___awdiv@divisor+1)^0,w,c
  1077   000292  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  1078   000294  A0D8               	btfss	status,0,c
  1079   000296  EF4F  F001         	goto	u221
  1080   00029A  EF51  F001         	goto	u220
  1081   00029E                     u221:
  1082   00029E  EF56  F001         	goto	l1080
  1083   0002A2                     u220:
  1084   0002A2  5004               	movf	___awdiv@divisor^0,w,c
  1085   0002A4  5E02               	subwf	___awdiv@dividend^0,f,c
  1086   0002A6  5005               	movf	(___awdiv@divisor+1)^0,w,c
  1087   0002A8  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  1088   0002AA  8008               	bsf	___awdiv@quotient^0,0,c
  1089   0002AC                     l1080:
  1090   0002AC  90D8               	bcf	status,0,c
  1091   0002AE  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  1092   0002B0  3204               	rrcf	___awdiv@divisor^0,f,c
  1093   0002B2  2E06               	decfsz	___awdiv@counter^0,f,c
  1094   0002B4  EF43  F001         	goto	l1072
  1095   0002B8                     l1084:
  1096   0002B8  5007               	movf	___awdiv@sign^0,w,c
  1097   0002BA  B4D8               	btfsc	status,2,c
  1098   0002BC  EF62  F001         	goto	u231
  1099   0002C0  EF64  F001         	goto	u230
  1100   0002C4                     u231:
  1101   0002C4  EF68  F001         	goto	l1088
  1102   0002C8                     u230:
  1103   0002C8  6C08               	negf	___awdiv@quotient^0,c
  1104   0002CA  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  1105   0002CC  B0D8               	btfsc	status,0,c
  1106   0002CE  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  1107   0002D0                     l1088:
  1108   0002D0  C008  F002         	movff	___awdiv@quotient,?___awdiv
  1109   0002D4  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  1110   0002D8  0012               	return		;funcret
  1111   0002DA                     __end_of___awdiv:
  1112                           	callstack 0
  1113                           
  1114 ;; *************** function _ReversOn *****************
  1115 ;; Defined at:
  1116 ;;		line 275 in file "user.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0
  1130 ;;      Params:         0       0
  1131 ;;      Locals:         0       0
  1132 ;;      Temps:          2       0
  1133 ;;      Totals:         2       0
  1134 ;;Total ram usage:        2 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 2
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text7
  1145   00057A                     __ptext7:
  1146                           	callstack 0
  1147   00057A                     _ReversOn:
  1148                           	callstack 28
  1149   00057A                     
  1150                           ;user.c: 280:             _delay((unsigned long)((120)*(4000000/4000.0)));
  1151   00057A  0E9C               	movlw	156
  1152   00057C  6E02               	movwf	??_ReversOn^0,c
  1153   00057E  0ED7               	movlw	215
  1154   000580                     u427:
  1155   000580  2EE8               	decfsz	wreg,f,c
  1156   000582  D7FE               	bra	u427
  1157   000584  2E02               	decfsz	??_ReversOn^0,f,c
  1158   000586  D7FC               	bra	u427
  1159   000588  F000               	nop	
  1160                           
  1161                           ;user.c: 282:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1162   00058A  0E03               	movlw	3
  1163   00058C  6E03               	movwf	(??_ReversOn+1)^0,c
  1164   00058E  0E8A               	movlw	138
  1165   000590  6E02               	movwf	??_ReversOn^0,c
  1166   000592  0E56               	movlw	86
  1167   000594                     u437:
  1168   000594  2EE8               	decfsz	wreg,f,c
  1169   000596  D7FE               	bra	u437
  1170   000598  2E02               	decfsz	??_ReversOn^0,f,c
  1171   00059A  D7FC               	bra	u437
  1172   00059C  2E03               	decfsz	(??_ReversOn+1)^0,f,c
  1173   00059E  D7FA               	bra	u437
  1174   0005A0  0012               	return		;funcret
  1175   0005A2                     __end_of_ReversOn:
  1176                           	callstack 0
  1177                           
  1178 ;; *************** function _AddRightBlinks *****************
  1179 ;; Defined at:
  1180 ;;		line 227 in file "user.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      _Bool 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0
  1194 ;;      Params:         0       0
  1195 ;;      Locals:         0       0
  1196 ;;      Temps:          2       0
  1197 ;;      Totals:         2       0
  1198 ;;Total ram usage:        2 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 2
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text8
  1209   000422                     __ptext8:
  1210                           	callstack 0
  1211   000422                     _AddRightBlinks:
  1212                           	callstack 28
  1213   000422                     
  1214                           ;user.c: 231:             PORTAbits.RA4 = 1;
  1215   000422  8880               	bsf	128,4,c	;volatile
  1216   000424                     
  1217                           ;user.c: 233:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1218   000424  0E02               	movlw	2
  1219   000426  6E03               	movwf	(??_AddRightBlinks+1)^0,c
  1220   000428  0E86               	movlw	134
  1221   00042A  6E02               	movwf	??_AddRightBlinks^0,c
  1222   00042C  0E99               	movlw	153
  1223   00042E                     u447:
  1224   00042E  2EE8               	decfsz	wreg,f,c
  1225   000430  D7FE               	bra	u447
  1226   000432  2E02               	decfsz	??_AddRightBlinks^0,f,c
  1227   000434  D7FC               	bra	u447
  1228   000436  2E03               	decfsz	(??_AddRightBlinks+1)^0,f,c
  1229   000438  D7FA               	bra	u447
  1230   00043A  F000               	nop	
  1231   00043C                     
  1232                           ;user.c: 234:             PORTAbits.RA4 = 0;
  1233   00043C  9880               	bcf	128,4,c	;volatile
  1234                           
  1235                           ;user.c: 235:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1236   00043E  0E03               	movlw	3
  1237   000440  6E03               	movwf	(??_AddRightBlinks+1)^0,c
  1238   000442  0E8A               	movlw	138
  1239   000444  6E02               	movwf	??_AddRightBlinks^0,c
  1240   000446  0E56               	movlw	86
  1241   000448                     u457:
  1242   000448  2EE8               	decfsz	wreg,f,c
  1243   00044A  D7FE               	bra	u457
  1244   00044C  2E02               	decfsz	??_AddRightBlinks^0,f,c
  1245   00044E  D7FC               	bra	u457
  1246   000450  2E03               	decfsz	(??_AddRightBlinks+1)^0,f,c
  1247   000452  D7FA               	bra	u457
  1248   000454                     
  1249                           ;user.c: 236:             PORTAbits.RA4 = 1;
  1250   000454  8880               	bsf	128,4,c	;volatile
  1251                           
  1252                           ;user.c: 238:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1253   000456  0E02               	movlw	2
  1254   000458  6E03               	movwf	(??_AddRightBlinks+1)^0,c
  1255   00045A  0E86               	movlw	134
  1256   00045C  6E02               	movwf	??_AddRightBlinks^0,c
  1257   00045E  0E99               	movlw	153
  1258   000460                     u467:
  1259   000460  2EE8               	decfsz	wreg,f,c
  1260   000462  D7FE               	bra	u467
  1261   000464  2E02               	decfsz	??_AddRightBlinks^0,f,c
  1262   000466  D7FC               	bra	u467
  1263   000468  2E03               	decfsz	(??_AddRightBlinks+1)^0,f,c
  1264   00046A  D7FA               	bra	u467
  1265   00046C  F000               	nop	
  1266   00046E                     
  1267                           ;user.c: 239:             PORTAbits.RA4 = 0;
  1268   00046E  9880               	bcf	128,4,c	;volatile
  1269                           
  1270                           ;user.c: 240:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1271   000470  0E03               	movlw	3
  1272   000472  6E03               	movwf	(??_AddRightBlinks+1)^0,c
  1273   000474  0E8A               	movlw	138
  1274   000476  6E02               	movwf	??_AddRightBlinks^0,c
  1275   000478  0E56               	movlw	86
  1276   00047A                     u477:
  1277   00047A  2EE8               	decfsz	wreg,f,c
  1278   00047C  D7FE               	bra	u477
  1279   00047E  2E02               	decfsz	??_AddRightBlinks^0,f,c
  1280   000480  D7FC               	bra	u477
  1281   000482  2E03               	decfsz	(??_AddRightBlinks+1)^0,f,c
  1282   000484  D7FA               	bra	u477
  1283   000486                     
  1284                           ;user.c: 241:             PORTAbits.RA4 = 1;
  1285   000486  8880               	bsf	128,4,c	;volatile
  1286                           
  1287                           ;user.c: 243:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1288   000488  0E02               	movlw	2
  1289   00048A  6E03               	movwf	(??_AddRightBlinks+1)^0,c
  1290   00048C  0E86               	movlw	134
  1291   00048E  6E02               	movwf	??_AddRightBlinks^0,c
  1292   000490  0E99               	movlw	153
  1293   000492                     u487:
  1294   000492  2EE8               	decfsz	wreg,f,c
  1295   000494  D7FE               	bra	u487
  1296   000496  2E02               	decfsz	??_AddRightBlinks^0,f,c
  1297   000498  D7FC               	bra	u487
  1298   00049A  2E03               	decfsz	(??_AddRightBlinks+1)^0,f,c
  1299   00049C  D7FA               	bra	u487
  1300   00049E  F000               	nop	
  1301   0004A0                     
  1302                           ;user.c: 244:             PORTAbits.RA4 = 0;
  1303   0004A0  9880               	bcf	128,4,c	;volatile
  1304                           
  1305                           ;user.c: 245:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1306   0004A2  0E82               	movlw	130
  1307   0004A4  6E02               	movwf	??_AddRightBlinks^0,c
  1308   0004A6  0EDE               	movlw	222
  1309   0004A8                     u497:
  1310   0004A8  2EE8               	decfsz	wreg,f,c
  1311   0004AA  D7FE               	bra	u497
  1312   0004AC  2E02               	decfsz	??_AddRightBlinks^0,f,c
  1313   0004AE  D7FC               	bra	u497
  1314   0004B0                     
  1315                           ;user.c: 246:             return wasTurningRight = 0;;	Return value of _AddRightBlinks i
      +                          s never used
  1316   0004B0  0E00               	movlw	0
  1317   0004B2  6E2E               	movwf	_wasTurningRight^0,c
  1318   0004B4  0012               	return		;funcret
  1319   0004B6                     __end_of_AddRightBlinks:
  1320                           	callstack 0
  1321                           
  1322 ;; *************** function _AddLeftBlinks *****************
  1323 ;; Defined at:
  1324 ;;		line 251 in file "user.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      _Bool 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0
  1338 ;;      Params:         0       0
  1339 ;;      Locals:         0       0
  1340 ;;      Temps:          2       0
  1341 ;;      Totals:         2       0
  1342 ;;Total ram usage:        2 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; Hardware stack levels required when called: 2
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text9
  1353   0004B6                     __ptext9:
  1354                           	callstack 0
  1355   0004B6                     _AddLeftBlinks:
  1356                           	callstack 28
  1357   0004B6                     
  1358                           ;user.c: 255:             PORTBbits.RB4 = 1;
  1359   0004B6  8881               	bsf	129,4,c	;volatile
  1360   0004B8                     
  1361                           ;user.c: 257:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1362   0004B8  0E02               	movlw	2
  1363   0004BA  6E03               	movwf	(??_AddLeftBlinks+1)^0,c
  1364   0004BC  0E86               	movlw	134
  1365   0004BE  6E02               	movwf	??_AddLeftBlinks^0,c
  1366   0004C0  0E99               	movlw	153
  1367   0004C2                     u507:
  1368   0004C2  2EE8               	decfsz	wreg,f,c
  1369   0004C4  D7FE               	bra	u507
  1370   0004C6  2E02               	decfsz	??_AddLeftBlinks^0,f,c
  1371   0004C8  D7FC               	bra	u507
  1372   0004CA  2E03               	decfsz	(??_AddLeftBlinks+1)^0,f,c
  1373   0004CC  D7FA               	bra	u507
  1374   0004CE  F000               	nop	
  1375   0004D0                     
  1376                           ;user.c: 258:             PORTBbits.RB4 = 0;
  1377   0004D0  9881               	bcf	129,4,c	;volatile
  1378                           
  1379                           ;user.c: 259:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1380   0004D2  0E03               	movlw	3
  1381   0004D4  6E03               	movwf	(??_AddLeftBlinks+1)^0,c
  1382   0004D6  0E8A               	movlw	138
  1383   0004D8  6E02               	movwf	??_AddLeftBlinks^0,c
  1384   0004DA  0E56               	movlw	86
  1385   0004DC                     u517:
  1386   0004DC  2EE8               	decfsz	wreg,f,c
  1387   0004DE  D7FE               	bra	u517
  1388   0004E0  2E02               	decfsz	??_AddLeftBlinks^0,f,c
  1389   0004E2  D7FC               	bra	u517
  1390   0004E4  2E03               	decfsz	(??_AddLeftBlinks+1)^0,f,c
  1391   0004E6  D7FA               	bra	u517
  1392   0004E8                     
  1393                           ;user.c: 260:             PORTBbits.RB4 = 1;
  1394   0004E8  8881               	bsf	129,4,c	;volatile
  1395                           
  1396                           ;user.c: 262:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1397   0004EA  0E02               	movlw	2
  1398   0004EC  6E03               	movwf	(??_AddLeftBlinks+1)^0,c
  1399   0004EE  0E86               	movlw	134
  1400   0004F0  6E02               	movwf	??_AddLeftBlinks^0,c
  1401   0004F2  0E99               	movlw	153
  1402   0004F4                     u527:
  1403   0004F4  2EE8               	decfsz	wreg,f,c
  1404   0004F6  D7FE               	bra	u527
  1405   0004F8  2E02               	decfsz	??_AddLeftBlinks^0,f,c
  1406   0004FA  D7FC               	bra	u527
  1407   0004FC  2E03               	decfsz	(??_AddLeftBlinks+1)^0,f,c
  1408   0004FE  D7FA               	bra	u527
  1409   000500  F000               	nop	
  1410   000502                     
  1411                           ;user.c: 263:             PORTBbits.RB4 = 0;
  1412   000502  9881               	bcf	129,4,c	;volatile
  1413                           
  1414                           ;user.c: 264:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1415   000504  0E03               	movlw	3
  1416   000506  6E03               	movwf	(??_AddLeftBlinks+1)^0,c
  1417   000508  0E8A               	movlw	138
  1418   00050A  6E02               	movwf	??_AddLeftBlinks^0,c
  1419   00050C  0E56               	movlw	86
  1420   00050E                     u537:
  1421   00050E  2EE8               	decfsz	wreg,f,c
  1422   000510  D7FE               	bra	u537
  1423   000512  2E02               	decfsz	??_AddLeftBlinks^0,f,c
  1424   000514  D7FC               	bra	u537
  1425   000516  2E03               	decfsz	(??_AddLeftBlinks+1)^0,f,c
  1426   000518  D7FA               	bra	u537
  1427   00051A                     
  1428                           ;user.c: 265:             PORTBbits.RB4 = 1;
  1429   00051A  8881               	bsf	129,4,c	;volatile
  1430                           
  1431                           ;user.c: 267:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1432   00051C  0E02               	movlw	2
  1433   00051E  6E03               	movwf	(??_AddLeftBlinks+1)^0,c
  1434   000520  0E86               	movlw	134
  1435   000522  6E02               	movwf	??_AddLeftBlinks^0,c
  1436   000524  0E99               	movlw	153
  1437   000526                     u547:
  1438   000526  2EE8               	decfsz	wreg,f,c
  1439   000528  D7FE               	bra	u547
  1440   00052A  2E02               	decfsz	??_AddLeftBlinks^0,f,c
  1441   00052C  D7FC               	bra	u547
  1442   00052E  2E03               	decfsz	(??_AddLeftBlinks+1)^0,f,c
  1443   000530  D7FA               	bra	u547
  1444   000532  F000               	nop	
  1445   000534                     
  1446                           ;user.c: 268:             PORTBbits.RB4 = 0;
  1447   000534  9881               	bcf	129,4,c	;volatile
  1448                           
  1449                           ;user.c: 269:             _delay((unsigned long)((100)*(4000000/4000.0)));
  1450   000536  0E82               	movlw	130
  1451   000538  6E02               	movwf	??_AddLeftBlinks^0,c
  1452   00053A  0EDE               	movlw	222
  1453   00053C                     u557:
  1454   00053C  2EE8               	decfsz	wreg,f,c
  1455   00053E  D7FE               	bra	u557
  1456   000540  2E02               	decfsz	??_AddLeftBlinks^0,f,c
  1457   000542  D7FC               	bra	u557
  1458   000544                     
  1459                           ;user.c: 270:             return wasTurningLeft = 0;;	Return value of _AddLeftBlinks is 
      +                          never used
  1460   000544  0E00               	movlw	0
  1461   000546  6E2D               	movwf	_wasTurningLeft^0,c
  1462   000548  0012               	return		;funcret
  1463   00054A                     __end_of_AddLeftBlinks:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _low_isr *****************
  1467 ;; Defined at:
  1468 ;;		line 67 in file "interrupts.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		None
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0
  1482 ;;      Params:         0       0
  1483 ;;      Locals:         0       0
  1484 ;;      Temps:          1       0
  1485 ;;      Totals:         1       0
  1486 ;;Total ram usage:        1 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		Interrupt level 1
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	intcodelo
  1497   000018                     __pintcodelo:
  1498                           	callstack 0
  1499   000018                     _low_isr:
  1500                           	callstack 25
  1501                           
  1502                           ;incstack = 0
  1503   000018  802F               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1504   00001A  CFE0 F001          	movff	bsr,??_low_isr
  1505   00001E  C001  FFE0         	movff	??_low_isr,bsr
  1506   000022  902F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1507   000024  0010               	retfie	
  1508   000026                     __end_of_low_isr:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _high_isr *****************
  1512 ;; Defined at:
  1513 ;;		line 27 in file "interrupts.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		None
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0
  1527 ;;      Params:         0       0
  1528 ;;      Locals:         0       0
  1529 ;;      Temps:          0       0
  1530 ;;      Totals:         0       0
  1531 ;;Total ram usage:        0 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		Interrupt level 2
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	intcode
  1541   000008                     __pintcode:
  1542                           	callstack 0
  1543   000008                     _high_isr:
  1544                           	callstack 25
  1545                           
  1546                           ;incstack = 0
  1547   000008  822F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1548   00000A  EFE8  F002         	goto	int_func
  1549                           
  1550                           	psect	intcode_body
  1551   0005D0                     __pintcode_body:
  1552                           	callstack 25
  1553   0005D0                     int_func:
  1554                           	callstack 25
  1555   0005D0  922F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1556   0005D2  0011               	retfie		f
  1557   0005D4                     __end_of_high_isr:
  1558                           	callstack 0
  1559   000000                     
  1560                           	psect	rparam
  1561   000000                     
  1562                           	psect	temp
  1563   00002F                     btemp:
  1564                           	callstack 0
  1565   00002F                     	ds	1
  1566   000000                     int$flags	set	btemp
  1567   000000                     wtemp8	set	btemp+1
  1568   000000                     ttemp5	set	btemp+1
  1569   000000                     ttemp6	set	btemp+4
  1570   000000                     ttemp7	set	btemp+8
  1571                           
  1572                           	psect	idloc
  1573                           
  1574                           ;Config register IDLOC0 @ 0x200000
  1575                           ;	unspecified, using default values
  1576   200000                     	org	2097152
  1577   200000  FF                 	db	255
  1578                           
  1579                           ;Config register IDLOC1 @ 0x200001
  1580                           ;	unspecified, using default values
  1581   200001                     	org	2097153
  1582   200001  FF                 	db	255
  1583                           
  1584                           ;Config register IDLOC2 @ 0x200002
  1585                           ;	unspecified, using default values
  1586   200002                     	org	2097154
  1587   200002  FF                 	db	255
  1588                           
  1589                           ;Config register IDLOC3 @ 0x200003
  1590                           ;	unspecified, using default values
  1591   200003                     	org	2097155
  1592   200003  FF                 	db	255
  1593                           
  1594                           ;Config register IDLOC4 @ 0x200004
  1595                           ;	unspecified, using default values
  1596   200004                     	org	2097156
  1597   200004  FF                 	db	255
  1598                           
  1599                           ;Config register IDLOC5 @ 0x200005
  1600                           ;	unspecified, using default values
  1601   200005                     	org	2097157
  1602   200005  FF                 	db	255
  1603                           
  1604                           ;Config register IDLOC6 @ 0x200006
  1605                           ;	unspecified, using default values
  1606   200006                     	org	2097158
  1607   200006  FF                 	db	255
  1608                           
  1609                           ;Config register IDLOC7 @ 0x200007
  1610                           ;	unspecified, using default values
  1611   200007                     	org	2097159
  1612   200007  FF                 	db	255
  1613                           
  1614                           	psect	config
  1615                           
  1616                           ; Padding undefined space
  1617   300000                     	org	3145728
  1618   300000  FF                 	db	255
  1619                           
  1620                           ;Config register CONFIG1H @ 0x300001
  1621                           ;	Oscillator Selection bits
  1622                           ;	OSC = INTIO2, Internal RC oscillator, port function on RA6 and port function on RA7
  1623                           ;	Fail-Safe Clock Monitor Enable bit
  1624                           ;	FSCM = ON, Fail-Safe Clock Monitor enabled
  1625                           ;	Internal External Switchover bit
  1626                           ;	IESO = ON, Internal External Switchover mode enabled
  1627   300001                     	org	3145729
  1628   300001  C8                 	db	200
  1629                           
  1630                           ;Config register CONFIG2L @ 0x300002
  1631                           ;	Power-up Timer Enable bit
  1632                           ;	PWRT = OFF, PWRT disabled
  1633                           ;	Brown-out Reset Enable bit
  1634                           ;	BOR = ON, Brown-out Reset enabled
  1635                           ;	Brown-out Reset Voltage bits
  1636                           ;	BORV = 0x3, unprogrammed default
  1637   300002                     	org	3145730
  1638   300002  0F                 	db	15
  1639                           
  1640                           ;Config register CONFIG2H @ 0x300003
  1641                           ;	Watchdog Timer Enable bit
  1642                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1643                           ;	Watchdog Timer Postscale Select bits
  1644                           ;	WDTPS = 32768, 1:32768
  1645   300003                     	org	3145731
  1646   300003  1E                 	db	30
  1647                           
  1648                           ; Padding undefined space
  1649   300004                     	org	3145732
  1650   300004  FF                 	db	255
  1651                           
  1652                           ;Config register CONFIG3H @ 0x300005
  1653                           ;	MCLR Pin Enable bit
  1654                           ;	MCLRE = OFF, RA5 input pin enabled, MCLR disabled
  1655   300005                     	org	3145733
  1656   300005  00                 	db	0
  1657                           
  1658                           ;Config register CONFIG4L @ 0x300006
  1659                           ;	Stack Full/Underflow Reset Enable bit
  1660                           ;	STVR = ON, Stack full/underflow will cause Reset
  1661                           ;	Low-Voltage ICSP Enable bit
  1662                           ;	LVP = ON, Low-Voltage ICSP enabled
  1663                           ;	Background Debugger Enable bit
  1664                           ;	DEBUG = 0x1, unprogrammed default
  1665   300006                     	org	3145734
  1666   300006  85                 	db	133
  1667                           
  1668                           ; Padding undefined space
  1669   300007                     	org	3145735
  1670   300007  FF                 	db	255
  1671                           
  1672                           ;Config register CONFIG5L @ 0x300008
  1673                           ;	Code Protection bit
  1674                           ;	CP0 = OFF, Block 0 (00200-000FFFh) not code-protected
  1675                           ;	Code Protection bit
  1676                           ;	CP1 = OFF, Block 1 (001000-001FFFh) not code-protected
  1677   300008                     	org	3145736
  1678   300008  03                 	db	3
  1679                           
  1680                           ;Config register CONFIG5H @ 0x300009
  1681                           ;	Boot Block Code Protection bit
  1682                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code-protected
  1683                           ;	Data EEPROM Code Protection bit
  1684                           ;	CPD = OFF, Data EEPROM not code-protected
  1685   300009                     	org	3145737
  1686   300009  C0                 	db	192
  1687                           
  1688                           ;Config register CONFIG6L @ 0x30000A
  1689                           ;	Write Protection bit
  1690                           ;	WRT0 = OFF, Block 0 (00200-000FFFh) not write-protected
  1691                           ;	Write Protection bit
  1692                           ;	WRT1 = OFF, Block 1 (001000-001FFFh) not write-protected
  1693   30000A                     	org	3145738
  1694   30000A  03                 	db	3
  1695                           
  1696                           ;Config register CONFIG6H @ 0x30000B
  1697                           ;	Configuration Register Write Protection bit
  1698                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1699                           ;	Boot Block Write Protection bit
  1700                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  1701                           ;	Data EEPROM Write Protection bit
  1702                           ;	WRTD = OFF, Data EEPROM not write-protected
  1703   30000B                     	org	3145739
  1704   30000B  E0                 	db	224
  1705                           
  1706                           ;Config register CONFIG7L @ 0x30000C
  1707                           ;	Table Read Protection bit
  1708                           ;	EBTR0 = OFF, Block 0 (00200-000FFFh) not protected from table reads executed in other 
      +                          blocks
  1709                           ;	Table Read Protection bit
  1710                           ;	EBTR1 = OFF, Block 1 (001000-001FFFh) not protected from table reads executed in other
      +                           blocks
  1711   30000C                     	org	3145740
  1712   30000C  03                 	db	3
  1713                           
  1714                           ;Config register CONFIG7H @ 0x30000D
  1715                           ;	Boot Block Table Read Protection bit
  1716                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  1717   30000D                     	org	3145741
  1718   30000D  40                 	db	64
  1719                           tosu	equ	0xFFF
  1720                           tosh	equ	0xFFE
  1721                           tosl	equ	0xFFD
  1722                           stkptr	equ	0xFFC
  1723                           pclatu	equ	0xFFB
  1724                           pclath	equ	0xFFA
  1725                           pcl	equ	0xFF9
  1726                           tblptru	equ	0xFF8
  1727                           tblptrh	equ	0xFF7
  1728                           tblptrl	equ	0xFF6
  1729                           tablat	equ	0xFF5
  1730                           prodh	equ	0xFF4
  1731                           prodl	equ	0xFF3
  1732                           indf0	equ	0xFEF
  1733                           postinc0	equ	0xFEE
  1734                           postdec0	equ	0xFED
  1735                           preinc0	equ	0xFEC
  1736                           plusw0	equ	0xFEB
  1737                           fsr0h	equ	0xFEA
  1738                           fsr0l	equ	0xFE9
  1739                           wreg	equ	0xFE8
  1740                           indf1	equ	0xFE7
  1741                           postinc1	equ	0xFE6
  1742                           postdec1	equ	0xFE5
  1743                           preinc1	equ	0xFE4
  1744                           plusw1	equ	0xFE3
  1745                           fsr1h	equ	0xFE2
  1746                           fsr1l	equ	0xFE1
  1747                           bsr	equ	0xFE0
  1748                           indf2	equ	0xFDF
  1749                           postinc2	equ	0xFDE
  1750                           postdec2	equ	0xFDD
  1751                           preinc2	equ	0xFDC
  1752                           plusw2	equ	0xFDB
  1753                           fsr2h	equ	0xFDA
  1754                           fsr2l	equ	0xFD9
  1755                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     36      46
    BANK0           128      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Turn_49A
    _Turn_49A->_GetCurrentValue
    _GetDirection->_GetADCValue
    _GetCurrentValue->_GetADCValue
    _GetADCValue->___awdiv

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1736
                                             28 COMRAM     8     8      0
                      _AddLeftBlinks
                     _AddRightBlinks
                        _GetADCValue
                            _InitADC
                           _ReversOn
                           _Turn_49A
 ---------------------------------------------------------------------------------
 (1) _Turn_49A                                             4     4      0    1145
                                             24 COMRAM     4     4      0
                    _GetCurrentValue
                       _GetDirection
 ---------------------------------------------------------------------------------
 (2) _GetDirection                                         0     0      0     537
                        _GetADCValue
                            _InitADC
 ---------------------------------------------------------------------------------
 (2) _GetCurrentValue                                      6     4      2     583
                                             18 COMRAM     6     4      2
                        _GetADCValue
                            _InitADC
 ---------------------------------------------------------------------------------
 (3) _InitADC                                              1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _GetADCValue                                          9     7      2     522
                                              9 COMRAM     9     7      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ReversOn                                             2     2      0       0
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _AddRightBlinks                                       2     2      0       0
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _AddLeftBlinks                                        2     2      0       0
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _low_isr                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddLeftBlinks
   _AddRightBlinks
   _GetADCValue
     ___awdiv
   _InitADC
   _ReversOn
   _Turn_49A
     _GetCurrentValue
       _GetADCValue
       _InitADC
     _GetDirection
       _GetADCValue
       _InitADC

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
EEDATA             100      0       0       0        0.0%
BIGRAM              FF      0       0       9        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     24      2E       1       36.5%
BITBIGSFRl          3E      0       0       7        0.0%
BITBIGSFRhh         3B      0       0       6        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2E       8        0.0%
DATA                 0      0      2E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jul 28 23:23:58 2022

                        l37 0212                          l85 05CE                          l98 014C  
                        l99 00DA                ___awdiv@sign 0007                          bsr 000FE0  
                       l102 010C                         l111 0380                         l122 04B4  
                       l107 0578                         l125 0548                         l117 03EE  
                       l118 0420                         l128 05A0                         l362 02D8  
                       l850 05C6                         l852 05CA                         l934 057A  
                       l848 05BE                         l980 046E                         l972 0422  
                       l990 04B6                         l982 0486                         l974 0424  
                       l992 04B8                         l984 04A0                         l976 043C  
                       l994 04D0                         l986 04B0                         l978 0454  
                       l996 04E8                         l998 0502                         u200 0268  
                       u201 0264                         u210 0286                         u211 0282  
                       u220 02A2                         u300 03BA                         u221 029E  
                       u301 03B6                         u230 02C8                         u310 01AA  
                       u231 02C4                         u311 01A6                         u240 00E8  
                       u320 01CE                         u241 00E4                         u321 01CA  
                       u250 011A                         u330 01E6                         u251 0116  
                       u331 01E2                         u180 0228                         u260 0318  
                       u340 01FE                         u181 0224                         u261 0314  
                       u341 01FA                         u190 0242                         u270 0334  
                       u191 023E                         u407 00D0                         u271 0330  
                       u280 0358                         u417 0100                         u281 0354  
                       u290 0374                         u507 04C2                         u427 0580  
                       u291 0370                         u517 04DC                         u437 0594  
                       u357 038A                         u527 04F4                         u447 042E  
                       u367 03C6                         u537 050E                         u457 0448  
                       u377 03DC                         u547 0526                         u467 0460  
                       u387 03FA                         i2l5 05D0                         u557 053C  
                       u477 047A                         u397 040E                         u487 0492  
                       u497 04A8                         wreg 000FE8        __end_of_GetDirection 0382  
           ??_AddLeftBlinks 0002               _R_ch_in_value 002B                        l1000 051A  
                      l1002 0534                        l1004 0544                        l1100 0048  
                      l1110 006C                        l1102 004E                        l1120 00D8  
                      l1104 0056                        l1200 0402                        l1050 021A  
                      l1130 012C                        l1122 00E8                        l1106 005C  
                      l1202 0404                        l1210 0166                        l1060 024A  
                      l1052 0228                        l1124 00FA                        l1108 0064  
                      l1116 0078                        l1140 056C                        l1220 0180  
                      l1212 0168                        l1070 0278                        l1062 024E  
                      l1054 0230                        l1126 010A                        l1118 00CA  
                      l1150 0334                        l1230 01B2                        l1222 018E  
                      l1214 016A                        l1080 02AC                        l1072 0286  
                      l1064 0256                        l1056 0234                        l1048 0216  
                      l1128 011A                        l1160 0374                        l1144 02DA  
                      l1240 01FE                        l1232 01CE                        l1224 01AA  
                      l1216 016C                        l1208 014E                        l1082 02B2  
                      l1074 028C                        l1066 0268                        l1058 0242  
                      l1138 054A                        l1146 02FC                        l1242 0206  
                      l1234 01D6                        l1218 0172                        l1076 02A2  
                      l1068 0270                        l1084 02B8                        l1092 002C  
                      l1148 0318                        l1156 033C                        l1180 03BA  
                      l1172 0382                        l1236 01E6                        l1086 02C8  
                      l1078 02AA                        l1094 0034                        l1158 0358  
                      l1166 037C                        l1190 03EA                        l1182 03BC  
                      l1174 0384                        l1238 01EE                        l1088 02D0  
                      l1248 008C                        l1096 003C                        l1184 03C0  
                      l1176 0392                        l1098 0042                        l1186 03D0  
                      l1178 039E                        l1196 03F0                        l1188 03D2  
                      l1198 03F4                        i1l10 001E                        _main 014E  
                      btemp 002F                 _GetADCValue 002A                        start 0026  
              ___param_bank 000000             __end_of_InitADC 05D0                       ?_main 0001  
           __end_of___awdiv 02DA             ___awdiv@divisor 0004             ___awdiv@counter 0006  
           __end_of_low_isr 0026           ??_GetCurrentValue 0015                       ttemp5 0030  
                     ttemp6 0033                       ttemp7 0037                       status 000FD8  
                     wtemp8 0030             __initialization 05A2                __end_of_main 0216  
                    ??_main 001D           main@_49A_in_value 0021               __activetblptr 000002  
          __end_of_ReversOn 05A2                      _ADCON0 000FC2                      _ADCON1 000FC1  
                    _ADCON2 000FC0            __end_of_Turn_49A 0422                      _ADRESH 000FC4  
                    _ADRESL 000FC3            ___awdiv@dividend 0002                  _V_in_value 0027  
                 ??_InitADC 0002            __end_of_high_isr 05D4                   ??___awdiv 0006  
 GetCurrentValue@V_in_value 0015            ??_AddRightBlinks 0002                      clear_0 05A8  
          ___awdiv@quotient 0008                      isa$std 000001                   ??_low_isr 0001  
                    tblptru 000FF8                  __accesstop 0080     __end_of__initialization 05AE  
             ___rparam_used 000001                _GetDirection 02DA              __pcstackCOMRAM 0001  
           _wasTurningRight 002E                ?_GetADCValue 000A                   ?_ReversOn 0001  
                 ?_Turn_49A 0001             _GetCurrentValue 054A           main@L_ch_in_value 001F  
     __end_of_AddLeftBlinks 054A                   ?_high_isr 0001                     _InitADC 05BC  
                   __Hparam 0000                     __Lparam 0000                  ??_ReversOn 0002  
                   ___awdiv 0216                  ??_Turn_49A 0019                     __pcinit 05A2  
                   __ramtop 0100                     __ptext0 014E                     __ptext1 0382  
                   __ptext2 02DA                     __ptext3 054A                     __ptext4 05BC  
                   __ptext5 002A                     __ptext6 0216                     __ptext7 057A  
                   __ptext8 0422                     __ptext9 04B6                 _V_out_value 0025  
                   _low_isr 0018                  ??_high_isr 0001              __pintcode_body 05D0  
      end_of_initialization 05AE               __Lmediumconst 0000                     int_func 05D0  
     Turn_49A@Current_value 001B                     postinc0 000FEE     __end_of_GetCurrentValue 057A  
GetCurrentValue@V_out_value 0017                   _PORTAbits 000F80                   _PORTBbits 000F81  
        GetADCValue@Channel 000E         start_initialization 05A2            ?_GetCurrentValue 0013  
               __pbssCOMRAM 0025               _L_ch_in_value 0029              _wasTurningLeft 002D  
                  ?_InitADC 0001                   __pintcode 0008                    ?___awdiv 0002  
               __pintcodelo 0018                    ?_low_isr 0001                    _GO_nDONE 007E11  
         main@R_ch_in_value 001D                    __Hrparam 0000               ?_GetDirection 0001  
                  _ReversOn 057A                    __Lrparam 0000           GetADCValue@temp_1 000F  
         GetADCValue@temp_2 0011                    _Turn_49A 0382              _AddRightBlinks 0422  
                  _high_isr 0008               _AddLeftBlinks 04B6               ??_GetADCValue 000C  
            ??_GetDirection 0013                    isa$xinst 000000        main@Reverse_in_value 0023  
                  int$flags 002F      __end_of_AddRightBlinks 04B6              ?_AddLeftBlinks 0001  
                  intlevel1 0000                    intlevel2 0000         __end_of_GetADCValue 014E  
           ?_AddRightBlinks 0001              InitADC@Channel 0002  
